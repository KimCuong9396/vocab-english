import { React, useState } from "react";
import { Card, Button } from "antd";
import { RotateCw, Volume2 } from "lucide-react"; // Bi·ªÉu t∆∞·ª£ng xoay v√† loa

const animalWords = [
  {
    word: "Elephant",
    meaning: "Con voi",
    image: "https://source.unsplash.com/200x200/?elephant",
    pronunciation: "/Àà…õl.…™.f…ônt/",
    example: "The elephant is the largest land animal.",
  },
  {
    word: "Tiger",
    meaning: "Con h·ªï",
    image: "https://source.unsplash.com/200x200/?tiger",
    pronunciation: "/Ààta…™.…°…ôr/",
    example: "The tiger is a strong and powerful animal.",
  },
  {
    word: "Dolphin",
    meaning: "C√° heo",
    image: "https://source.unsplash.com/200x200/?dolphin",
    pronunciation: "/Ààd…ëÀêl.f…™n/",
    example: "Dolphins are very intelligent creatures.",
  },
  {
    word: "Panda",
    meaning: "G·∫•u tr√∫c",
    image: "https://source.unsplash.com/200x200/?panda",
    pronunciation: "/Ààp√¶n.d…ô/",
    example: "Pandas eat a lot of bamboo.",
  },
];

const Animals = () => {
  const [index, setIndex] = useState(0);
  const [flipped, setFlipped] = useState(false);

  const handleNext = () => {
    setFlipped(false); // Quay l·∫°i m·∫∑t tr∆∞·ªõc khi ƒë·ªïi t·ª´ m·ªõi
    setIndex((prevIndex) => (prevIndex + 1) % animalWords.length);
  };

  const handleFlip = () => {
    setFlipped(!flipped);
  };

  const speakWord = (word) => {
    const utterance = new SpeechSynthesisUtterance(word);
    utterance.lang = "en-US"; // Gi·ªçng ti·∫øng Anh
    speechSynthesis.speak(utterance);
  };

  const { word, meaning, image, pronunciation, example } = animalWords[index];

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100">
      <h1 className="text-3xl font-bold text-blue-600 mb-6">
        üêæ H·ªçc t·ª´ v·ª±ng: Animals
      </h1>

      <Card
        className="w-96 p-6 rounded-xl shadow-lg bg-white border-gray-300 text-center relative cursor-pointer hover:shadow-xl transition duration-300"
        onClick={handleFlip}
      >
        {!flipped ? (
          // M·∫∑t tr∆∞·ªõc c·ªßa Flashcard
          <div>
            <img
              src={image}
              alt={word}
              className="w-32 h-32 mx-auto mb-4 rounded-lg"
            />
            <h2 className="text-2xl font-bold text-gray-800">{word}</h2>
            <p className="text-gray-500 text-lg italic">{pronunciation}</p>
            <p className="text-gray-700 text-lg">{meaning}</p>

            {/* Bi·ªÉu t∆∞·ª£ng loa ph√°t √¢m thanh */}
            <button
              onClick={(e) => {
                e.stopPropagation(); // NgƒÉn click l√†m l·∫≠t th·∫ª
                speakWord(word);
              }}
              className="absolute bottom-3 right-3 text-gray-600 hover:text-blue-600"
            >
              <Volume2 size={24} />
            </button>

            <RotateCw className="absolute top-3 right-3 text-gray-400" />
          </div>
        ) : (
          // M·∫∑t sau c·ªßa Flashcard (V√≠ d·ª•)
          <div>
            <h3 className="text-xl font-bold text-gray-800">V√≠ d·ª•:</h3>
            <p className="text-gray-600 italic mt-4">"{example}"</p>
            <RotateCw className="absolute top-3 right-3 text-gray-400" />
          </div>
        )}
      </Card>

      <Button
        type="primary"
        className="mt-6 px-6 py-2 text-lg bg-blue-600 hover:bg-blue-700 rounded-lg"
        onClick={handleNext}
      >
        Ti·∫øp t·ª•c ‚û°Ô∏è
      </Button>
    </div>
  );
};

export default Animals;
